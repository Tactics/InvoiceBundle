<?php

namespace Tactics\InvoiceBundle\Tools\Agresso;

use Tactics\InvoiceBundle\Tools\Agresso\Customer as AgressoCustomer;
use Tactics\InvoiceBundle\Model\ObjectManager as CustomerInfoMgr;
use Tactics\InvoiceBundle\Tools\ConverterResult;

class CustomerConverter
{
    private $customerFactory;
    
    /**
     * Constructor
     * @param CustomerFactoryInterface $customerFactory
     */
    public function __construct(CustomerFactoryInterface $customerFactory)
    {
        $this->customerFactory = $customerFactory;
    }
    
    /**
     * Converts the given invoices to an xml with the customers
     * 
     * @param type $invoices
     * @return string The XML for Agresso
     */
    public function convert($invoices)
    {
        $now = new \myDate(time());
        
        $xml = '<?xml version="1.0" encoding="UTF-8"?>';
        $xml .= sprintf('<!--XML generated by Tactics on %s-->', $now->format('f'));
        $xml .= '<!--Link Agresso TAC_BRUGGE-->';
        $xml .= '<Customer>';
        foreach ($invoices as $invoice)
        {
            $xml .= $this->getCustomerXml($this->customerFactory->getCustomer($invoice));
        }
        $xml .= '</Customer>';
        
        return new ConverterResult('klanten.xml', 'text/xml', $xml);
    }
    
    /**
     * generates the Agresso XML for a customer
     * 
     * @param CustomerInterface $customer
     * @return string An Agresso customer XML
     */
    private function getCustomerXml(AgressoCustomer $customer)
    {
        $xml = '<MasterFile>';        
        $xml .= sprintf('<ApArNo>%s</ApArNo>', $customer->getApArNo());
        $xml .= $this->getSupplierCustomer($customer);        
        $xml .= $this->getAddressInfo($customer);
        $xml .= '</MasterFile>';
        
        return $xml;
    }
    
    private function getSupplierCustomer(AgressoCustomer $customer)
    {
        $xml = '<SupplierCustomer>';
        $xml .= sprintf('<Name>%s</Name>', substr($customer->getName(), 0, 255));
        $xml .= sprintf('<ApArGroup>%02u</ApArGroup>', $customer->getApArGroup());
        $xml .= sprintf('<ShortName>%s</ShortName>', $customer->getApArNo());
        $xml .= sprintf('<CountryCode>%s</CountryCode>', $customer->getCountryCode());
        $xml .= $this->getInvoiceInfo($customer);        
        $xml .= '</SupplierCustomer>';
        
        return $xml;
    }
    
    private function getInvoiceInfo(AgressoCustomer $customer)
    {
        $xml = '<InvoiceInfo>';
        $xml .= sprintf('<HeadOffice>%s</HeadOffice>', $customer->getApArNo());
        $xml .= sprintf('<Control>%s</Control>', $customer->getControl());
        $xml .= '</InvoiceInfo>';
        
        return $xml;
    }
    
    private function getAddressInfo(AgressoCustomer $customer)
    {
        $xml = '<AddressInfo>';
        $xml .= sprintf('<Address>%s</Address>', $customer->getAddress());
        $xml .= sprintf('<Place>%s</Place>', $customer->getPlace());
        $xml .= sprintf('<ZipCode>%s</ZipCode>', $customer->getZipCode());
        $xml .= sprintf('<CountryCode>%s</CountryCode>', $customer->getCountryCode());
        $xml .= '</AddressInfo>';
        
        return $xml;
    }
}